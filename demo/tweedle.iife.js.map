{"version":3,"file":"tweedle.iife.js","sources":["../src/Now.ts","../src/Interpolation.ts","../src/Group.ts","../src/Easing.ts","../src/Sequence.ts","../src/Tween.ts","../src/Version.ts"],"sourcesContent":["/**\n * Polyfilled function to get the current time in miliseconds.\n * It tries to use `process.hrtime()`, `performance.now()`, `Date.now()` or `new Date().getTime()` in that order.\n */\nexport let NOW: () => number;\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\n\n// @ts-ignore\nif (typeof self == \"undefined\" && typeof process !== \"undefined\" && process.hrtime) {\n\tNOW = function (): number {\n\t\t// @ts-ignore\n\t\tconst time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== \"undefined\" && self.performance !== undefined && self.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tNOW = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tNOW = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tNOW = function (): number {\n\t\treturn new Date().getTime();\n\t};\n}\n","/**\n * An function that takes creates a value by interpolating the elements of the array given.\n */\nexport type InterpolationFunction = (v: number[], k: number) => number;\n\n/**\n * Object containing common interpolation functions.\n * These functions can be passed in the {@link Tween.interpolation} argument and **will only affect fields where you gave an array as target value**\n */\nexport const Interpolation = {\n\t/**\n\t * Geometric interpolation functions. Good for interpolating positions in space.\n\t */\n\tGeom: {\n\t\t/**\n\t\t * Linear interpolation is like drawing straight lines between the points.\n\t\t */\n\t\tLinear(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tconst f = m * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.Linear;\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t\t}\n\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t\t},\n\n\t\t/**\n\t\t * A BÃ©zier curve is defined by a set of control points P0 through Pn, where n is called its order.\n\t\t * The first and last control points are always the end points of the curve; however, the intermediate control points (if any) generally do not lie on the curve.\n\t\t *\n\t\t * https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Explicit_definition\n\t\t */\n\t\tBezier(v: number[], k: number): number {\n\t\t\tlet b = 0;\n\t\t\tconst n = v.length - 1;\n\t\t\tconst pw = Math.pow;\n\t\t\tconst bn = Interpolation.Utils.Bernstein;\n\n\t\t\tfor (let i = 0; i <= n; i++) {\n\t\t\t\tb += bn(n, i) * pw(1 - k, n - i) * pw(k, i) * v[i];\n\t\t\t}\n\n\t\t\treturn b;\n\t\t},\n\n\t\tQuadraticBezier(v: number[], k: number): number {\n\t\t\tlet b = 0;\n\t\t\tconst n = v.length - 1;\n\t\t\tconst pw = Math.pow;\n\t\t\tconst bn = Interpolation.Utils.Bernstein;\n\n\t\t\tconst f = n * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst t = (f - i) * 0.5 + 0.5 * (i % 2);\n\t\t\tconst i0: number = i - (i % 2);\n\t\t\tconst i1: number = i0 + 1;\n\t\t\tconst i2: number = i0 + 2;\n\n\t\t\tb += bn(2, 0) * pw(1 - t, 2 - 0) * pw(t, 0) * v[i0];\n\t\t\tb += bn(2, 1) * pw(1 - t, 2 - 1) * pw(t, 1) * v[i1];\n\t\t\tb += bn(2, 2) * pw(1 - t, 2 - 2) * pw(t, 2) * v[i2];\n\n\t\t\treturn b;\n\t\t},\n\n\t\tCubicBezier(v: number[], k: number): number {\n\t\t\tlet b = 0;\n\t\t\tconst n = v.length - 1;\n\t\t\tconst pw = Math.pow;\n\t\t\tconst bn = Interpolation.Utils.Bernstein;\n\n\t\t\tconst f = n * k;\n\t\t\tconst i = Math.floor(f);\n\n\t\t\tconst t = (f - i) * (1 / 3) + (1 / 3) * (i % 3);\n\n\t\t\tconst i0: number = i - (i % 3);\n\t\t\tconst i1: number = i0 + 1;\n\t\t\tconst i2: number = i0 + 2;\n\t\t\tconst i3: number = i0 + 3;\n\n\t\t\tb += bn(3, 0) * pw(1 - t, 3 - 0) * pw(t, 0) * v[i0];\n\t\t\tb += bn(3, 1) * pw(1 - t, 3 - 1) * pw(t, 1) * v[i1];\n\t\t\tb += bn(3, 2) * pw(1 - t, 3 - 2) * pw(t, 2) * v[i2];\n\t\t\tb += bn(3, 3) * pw(1 - t, 3 - 3) * pw(t, 3) * v[i3];\n\n\t\t\treturn b;\n\t\t},\n\n\t\t/**\n\t\t * A Catmullrom spline is a curve where the original set of points is also used as control points.\n\t\t * Usually Catmullrom splines need two extra elements at the beginning and the end of the point set. This function contemplates that and doesn't need them.\n\t\t *\n\t\t * https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Catmull%E2%80%93Rom_spline\n\t\t */\n\t\tCatmullRom(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tlet f = m * k;\n\t\t\tlet i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.CatmullRom;\n\n\t\t\tif (v[0] == v[m]) {\n\t\t\t\tif (k < 0) {\n\t\t\t\t\ti = Math.floor((f = m * (1 + k)));\n\t\t\t\t}\n\n\t\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\t\t\t}\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\t\t},\n\t},\n\t/**\n\t * Given the spinny nature of angles, sometimes it's better to go back to get to the right place earlier.\n\t * This functions help with that.\n\t */\n\tAngle: {\n\t\t/**\n\t\t * Normalizes angles between 0 and 2pi and then rotates the object in the shortest direction.\n\t\t */\n\t\tRadians(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tconst f = m * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.WrapLinear;\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f, 2 * Math.PI);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f, 2 * Math.PI);\n\t\t\t}\n\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i, 2 * Math.PI);\n\t\t},\n\n\t\t/**\n\t\t * Normalizes angles between 0 and 360 and then rotates the object in the shortest direction.\n\t\t */\n\t\tDegrees(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tconst f = m * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.WrapLinear;\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f, 360);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f, 360);\n\t\t\t}\n\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i, 360);\n\t\t},\n\t},\n\n\t/**\n\t * Even if colors are numbers, interpolating them can be tricky.\n\t */\n\tColor: {\n\t\t/**\n\t\t * Interpolates the color by their channels Red, Green, and Blue.\n\t\t */\n\t\tRGB(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tconst f = m * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.RGBLinear;\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t\t}\n\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t\t},\n\n\t\t/**\n\t\t * Interpolates the color by their Hue, Saturation, and Value.\n\t\t */\n\t\tHSV(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tconst f = m * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.HSVLinear;\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t\t}\n\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t\t},\n\n\t\t/**\n\t\t * Interpolates the color by their Hue, Chroma, and Lightness.\n\t\t */\n\t\tHCL(v: number[], k: number): number {\n\t\t\tconst m = v.length - 1;\n\t\t\tconst f = m * k;\n\t\t\tconst i = Math.floor(f);\n\t\t\tconst fn = Interpolation.Utils.HCLLinear;\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t\t}\n\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t\t},\n\t},\n\n\t/**\n\t * Helper functions used to calculate the different interpolations\n\t */\n\tUtils: {\n\t\tRGBsplit(color: number): ARGB {\n\t\t\t// this gets named ARGB but it is actually meaningless. It will work with RGBA just the same.\n\t\t\tconst a = (color >> 24) & 0xff;\n\t\t\tconst r = (color >> 16) & 0xff;\n\t\t\tconst g = (color >> 8) & 0xff;\n\t\t\tconst b = color & 0xff;\n\t\t\treturn { a, r, g, b };\n\t\t},\n\t\tHSVsplit(color: number): AHSV {\n\t\t\tconst rgb = Interpolation.Utils.RGBsplit(color);\n\n\t\t\t(rgb.r /= 255), (rgb.g /= 255), (rgb.b /= 255);\n\n\t\t\tconst max = Math.max(rgb.r, rgb.g, rgb.b);\n\t\t\tconst min = Math.min(rgb.r, rgb.g, rgb.b);\n\t\t\tlet h;\n\t\t\tconst v = max;\n\n\t\t\tconst d = max - min;\n\t\t\tconst s = max == 0 ? 0 : d / max;\n\n\t\t\tif (max == min) {\n\t\t\t\th = 0; // achromatic\n\t\t\t} else {\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase rgb.r:\n\t\t\t\t\t\th = (rgb.g - rgb.b) / d + (rgb.g < rgb.b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgb.g:\n\t\t\t\t\t\th = (rgb.b - rgb.r) / d + 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgb.b:\n\t\t\t\t\t\th = (rgb.r - rgb.g) / d + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\th /= 6;\n\t\t\t}\n\n\t\t\treturn { a: rgb.a, h, s, v };\n\t\t},\n\t\tHSVJoin(color: AHSV): number {\n\t\t\tlet r, g, b;\n\n\t\t\tconst i = Math.floor(color.h * 6);\n\t\t\tconst f = color.h * 6 - i;\n\t\t\tconst p = color.v * (1 - color.s);\n\t\t\tconst q = color.v * (1 - f * color.s);\n\t\t\tconst t = color.v * (1 - (1 - f) * color.s);\n\n\t\t\tswitch (i % 6) {\n\t\t\t\tcase 0:\n\t\t\t\t\t(r = color.v), (g = t), (b = p);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\t(r = q), (g = color.v), (b = p);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t(r = p), (g = color.v), (b = t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t(r = p), (g = q), (b = color.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\t(r = t), (g = p), (b = color.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\t(r = color.v), (g = p), (b = q);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn (color.a << 24) | (r << 16) | (g << 8) | b;\n\t\t},\n\n\t\tHCLSplit(color: number): AHCL {\n\t\t\t/* https://www.chilliant.com/rgb2hsv.html */\n\t\t\tconst HCLgamma = 3;\n\t\t\tconst HCLy0 = 100;\n\t\t\tconst HCLmaxL = 0.530454533953517; // == exp(HCLgamma / HCLy0) - 0.5\n\n\t\t\tconst RGB = Interpolation.Utils.RGBsplit(color);\n\t\t\tconst HCL: AHCL = { a: RGB.a, h: 0, c: 0, l: 0 };\n\t\t\tlet H = 0;\n\t\t\tconst U = Math.min(RGB.r, Math.min(RGB.g, RGB.b));\n\t\t\tconst V = Math.max(RGB.r, Math.max(RGB.g, RGB.b));\n\t\t\tlet Q = HCLgamma / HCLy0;\n\t\t\tHCL.c = V - U;\n\t\t\tif (HCL.c != 0) {\n\t\t\t\tH = Math.atan2(RGB.g - RGB.b, RGB.r - RGB.g) / Math.PI;\n\t\t\t\tQ *= U / V;\n\t\t\t}\n\t\t\tQ = Math.exp(Q);\n\t\t\tHCL.h = (H / 2 - Math.min(H % 1, -H % 1) / 6) % 1;\n\t\t\tHCL.c *= Q;\n\t\t\tHCL.l = Interpolation.Utils.Linear(-U, V, Q) / (HCLmaxL * 2);\n\t\t\treturn HCL;\n\t\t},\n\n\t\tHCLJoin(HCL: AHCL): number {\n\t\t\t/* https://www.chilliant.com/rgb2hsv.html */\n\t\t\tconst HCLgamma = 3;\n\t\t\tconst HCLy0 = 100;\n\t\t\tconst HCLmaxL = 0.530454533953517; // == exp(HCLgamma / HCLy0) - 0.5\n\t\t\tconst RGB: ARGB = { a: HCL.a, r: 0, g: 0, b: 0 };\n\n\t\t\tif (HCL.l != 0) {\n\t\t\t\tlet H = HCL.h;\n\t\t\t\tconst C = HCL.c;\n\t\t\t\tconst L = HCL.l * HCLmaxL;\n\t\t\t\tconst Q = Math.exp((1 - C / (2 * L)) * (HCLgamma / HCLy0));\n\t\t\t\tconst U = (2 * L - C) / (2 * Q - 1);\n\t\t\t\tconst V = C / Q;\n\t\t\t\tconst A = (H + Math.min(((2 * H) % 1) / 4, ((-2 * H) % 1) / 8)) * Math.PI * 2;\n\t\t\t\tlet T;\n\t\t\t\tH *= 6;\n\t\t\t\tif (H <= 0.999) {\n\t\t\t\t\tT = Math.tan(A);\n\t\t\t\t\tRGB.r = 1;\n\t\t\t\t\tRGB.g = T / (1 + T);\n\t\t\t\t} else if (H <= 1.001) {\n\t\t\t\t\tRGB.r = 1;\n\t\t\t\t\tRGB.g = 1;\n\t\t\t\t} else if (H <= 2) {\n\t\t\t\t\tT = Math.tan(A);\n\t\t\t\t\tRGB.r = (1 + T) / T;\n\t\t\t\t\tRGB.g = 1;\n\t\t\t\t} else if (H <= 3) {\n\t\t\t\t\tT = Math.tan(A);\n\t\t\t\t\tRGB.g = 1;\n\t\t\t\t\tRGB.b = 1 + T;\n\t\t\t\t} else if (H <= 3.999) {\n\t\t\t\t\tT = Math.tan(A);\n\t\t\t\t\tRGB.g = 1 / (1 + T);\n\t\t\t\t\tRGB.b = 1;\n\t\t\t\t} else if (H <= 4.001) {\n\t\t\t\t\tRGB.g = 0;\n\t\t\t\t\tRGB.b = 1;\n\t\t\t\t} else if (H <= 5) {\n\t\t\t\t\tT = Math.tan(A);\n\t\t\t\t\tRGB.r = -1 / T;\n\t\t\t\t\tRGB.b = 1;\n\t\t\t\t} else {\n\t\t\t\t\tT = Math.tan(A);\n\t\t\t\t\tRGB.r = 1;\n\t\t\t\t\tRGB.b = -T;\n\t\t\t\t}\n\t\t\t\tRGB.r = RGB.r * V + U;\n\t\t\t\tRGB.g = RGB.g * V + U;\n\t\t\t\tRGB.b = RGB.b * V + U;\n\t\t\t}\n\t\t\treturn (RGB.a << 24) | (RGB.r << 16) | (RGB.g << 8) | RGB.b;\n\t\t},\n\n\t\tWrapLinear(value1: number, value2: number, t: number, maxValue: number): number {\n\t\t\tlet retval: number;\n\n\t\t\t// this fixes my values to be between 0 and maxvalue.\n\t\t\tvalue1 = (value1 + maxValue * Math.trunc(Math.abs(value1 / maxValue))) % maxValue;\n\t\t\tvalue2 = (value2 + maxValue * Math.trunc(Math.abs(value2 / maxValue))) % maxValue;\n\n\t\t\tif (Math.abs(value1 - value2) <= 0.5 * maxValue) {\n\t\t\t\tretval = Interpolation.Utils.Linear(value1, value2, t);\n\t\t\t} else {\n\t\t\t\tif (value1 < value2) {\n\t\t\t\t\tretval = Interpolation.Utils.Linear(value1 + maxValue, value2, t);\n\t\t\t\t} else {\n\t\t\t\t\tretval = Interpolation.Utils.Linear(value1, value2 + maxValue, t);\n\t\t\t\t}\n\t\t\t\tretval = retval % maxValue;\n\t\t\t}\n\t\t\treturn retval;\n\t\t},\n\n\t\tRGBLinear(color1: number, color2: number, t: number): number {\n\t\t\tconst argb1 = Interpolation.Utils.RGBsplit(color1);\n\t\t\tconst argb2 = Interpolation.Utils.RGBsplit(color2);\n\t\t\tconst a = Interpolation.Utils.Linear(argb1.a, argb2.a, t);\n\t\t\tconst r = Interpolation.Utils.Linear(argb1.r, argb2.r, t);\n\t\t\tconst g = Interpolation.Utils.Linear(argb1.g, argb2.g, t);\n\t\t\tconst b = Interpolation.Utils.Linear(argb1.b, argb2.b, t);\n\t\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t\t},\n\t\tHSVLinear(color1: number, color2: number, t: number): number {\n\t\t\tconst ahsv1 = Interpolation.Utils.HSVsplit(color1);\n\t\t\tconst ahsv2 = Interpolation.Utils.HSVsplit(color2);\n\t\t\tlet h: number;\n\t\t\tif (Math.abs(ahsv1.h - ahsv2.h) <= 0.5) {\n\t\t\t\th = Interpolation.Utils.Linear(ahsv1.h, ahsv2.h, t);\n\t\t\t} else {\n\t\t\t\tif (ahsv1.h < ahsv2.h) {\n\t\t\t\t\th = Interpolation.Utils.Linear(ahsv1.h + 1, ahsv2.h, t);\n\t\t\t\t} else {\n\t\t\t\t\th = Interpolation.Utils.Linear(ahsv1.h, ahsv2.h + 1, t);\n\t\t\t\t}\n\t\t\t\th = h % 1;\n\t\t\t}\n\t\t\tconst s = Interpolation.Utils.Linear(ahsv1.s, ahsv2.s, t);\n\t\t\tconst v = Interpolation.Utils.Linear(ahsv1.v, ahsv2.v, t);\n\t\t\tconst a = Interpolation.Utils.Linear(ahsv1.a, ahsv2.a, t); // alpha can't be done with hsv\n\t\t\treturn Interpolation.Utils.HSVJoin({ a, h, s, v });\n\t\t},\n\t\tHCLLinear(color1: number, color2: number, t: number): number {\n\t\t\tconst ahcl1 = Interpolation.Utils.HCLSplit(color1);\n\t\t\tconst ahcl2 = Interpolation.Utils.HCLSplit(color2);\n\t\t\tlet h: number;\n\t\t\tif (Math.abs(ahcl1.h - ahcl2.h) <= 0.5) {\n\t\t\t\th = Interpolation.Utils.Linear(ahcl1.h, ahcl2.h, t);\n\t\t\t} else {\n\t\t\t\tif (ahcl1.h < ahcl2.h) {\n\t\t\t\t\th = Interpolation.Utils.Linear(ahcl1.h + 1, ahcl2.h, t);\n\t\t\t\t} else {\n\t\t\t\t\th = Interpolation.Utils.Linear(ahcl1.h, ahcl2.h + 1, t);\n\t\t\t\t}\n\t\t\t\th = h % 1;\n\t\t\t}\n\t\t\tconst s = Interpolation.Utils.Linear(ahcl1.c, ahcl2.c, t);\n\t\t\tconst v = Interpolation.Utils.Linear(ahcl1.l, ahcl2.l, t);\n\t\t\tconst a = Interpolation.Utils.Linear(ahcl1.a, ahcl2.a, t); // alpha can't be done with hsv\n\t\t\treturn Interpolation.Utils.HSVJoin({ a, h, s, v });\n\t\t},\n\n\t\tLinear(p0: number, p1: number, t: number): number {\n\t\t\treturn (p1 - p0) * t + p0;\n\t\t},\n\t\tBernstein(n: number, i: number): number {\n\t\t\tconst fc = Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\t\t},\n\t\tFactorial: (function () {\n\t\t\tconst a = [1];\n\n\t\t\treturn function (n: number): number {\n\t\t\t\tlet s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (let i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\n\t\t\t\treturn s;\n\t\t\t};\n\t\t})(),\n\n\t\tCatmullRom(p0: number, p1: number, p2: number, p3: number, t: number): number {\n\t\t\tconst v0 = (p2 - p0) * 0.5;\n\t\t\tconst v1 = (p3 - p1) * 0.5;\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t\t},\n\t},\n};\n\ninterface ARGB {\n\ta: number;\n\tr: number;\n\tg: number;\n\tb: number;\n}\n\ninterface AHSV {\n\ta: number;\n\th: number;\n\ts: number;\n\tv: number;\n}\n\ninterface AHCL {\n\ta: number;\n\th: number;\n\tc: number;\n\tl: number;\n}\n","import { NOW } from \"./Now\";\nimport type { Tween } from \"./Tween\";\n\n/**\n * A group is a class that allows you to manage many tweens from one place.\n *\n * A tween will ALWAYS belong to a group. If no group is assigned it will default to the static shared group: `Group.shared`.\n */\nexport class Group {\n\tprivate _tweens: {\n\t\t[key: string]: Tween<any>;\n\t} = {};\n\n\tprivate _tweensAddedDuringUpdate: {\n\t\t[key: string]: Tween<any>;\n\t} = {};\n\n\tprivate static _shared: Group;\n\n\t/**\n\t * A tween without an explicit group will default to this shared static one.\n\t */\n\tpublic static get shared(): Group {\n\t\tif (!Group._shared) {\n\t\t\tGroup._shared = new Group();\n\t\t}\n\t\treturn Group._shared;\n\t}\n\n\tprivate _lastUpdateTime: number = undefined;\n\n\t/**\n\t * Function used by the group to know what time is it.\n\t * Used to calculate the deltaTime in case you call update without the parameter.\n\t */\n\tpublic now: () => number = NOW; // used to calculate deltatime in case you stop providing one\n\n\t/**\n\t * Returns all the tweens in this group.\n\t *\n\t * _note: only **running** tweens are in a group._\n\t * @returns all the running tweens.\n\t */\n\tpublic getAll(): Array<Tween<any>> {\n\t\treturn Object.keys(this._tweens).map((tweenId) => this._tweens[tweenId]);\n\t}\n\n\t/**\n\t * Removes all the tweens in this group.\n\t *\n\t * _note: this will not modify the group reference inside the tween object_\n\t */\n\tpublic removeAll(): void {\n\t\tthis._tweens = {};\n\t}\n\n\t/**\n\t * Adds a tween to this group.\n\t *\n\t * _note: this will not modify the group reference inside the tween object_\n\t * @param tween Tween to add.\n\t */\n\tpublic add(tween: Tween<any>): void {\n\t\tthis._tweens[tween.getId()] = tween;\n\t\tthis._tweensAddedDuringUpdate[tween.getId()] = tween;\n\t}\n\n\t/**\n\t * Removes a tween from this group.\n\t *\n\t * _note: this will not modify the group reference inside the tween object_\n\t * @param tween\n\t */\n\tpublic remove(tween: Tween<any>): void {\n\t\tdelete this._tweens[tween.getId()];\n\t\tdelete this._tweensAddedDuringUpdate[tween.getId()];\n\t}\n\n\t/**\n\t * Updates all the tweens in this group.\n\t *\n\t * If a tween is stopped, paused, finished or non started it will be removed from the group.\n\t *\n\t *  Tweens are updated in \"batches\". If you add a new tween during an\n\t *  update, then the new tween will be updated in the next batch.\n\t *  If you remove a tween during an update, it may or may not be updated.\n\t *  However, if the removed tween was added during the current batch,\n\t *  then it will not be updated.\n\t * @param deltaTime - Amount of **miliseconds** that have passed since last excecution. If not provided it will be calculated using the {@link Group.now} function\n\t * @param preserve - Prevent the removal of stopped, paused, finished or non started tweens.\n\t * @returns returns true if the group is not empty.\n\t */\n\tpublic update(deltaTime?: number, preserve: boolean = false): boolean {\n\t\tlet tweenIds = Object.keys(this._tweens);\n\n\t\tif (deltaTime == undefined) {\n\t\t\t// now varies from line to line, that's why I manually use 0 as dt\n\t\t\tif (this._lastUpdateTime == undefined) {\n\t\t\t\tthis._lastUpdateTime = this.now();\n\t\t\t\tdeltaTime = 0;\n\t\t\t} else {\n\t\t\t\tdeltaTime = this.now() - this._lastUpdateTime;\n\t\t\t}\n\t\t}\n\n\t\tthis._lastUpdateTime = this.now();\n\n\t\tif (tweenIds.length == 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Tweens are updated in \"batches\". If you add a new tween during an\n\t\t// update, then the new tween will be updated in the next batch.\n\t\t// If you remove a tween during an update, it may or may not be updated.\n\t\t// However, if the removed tween was added during the current batch,\n\t\t// then it will not be updated.\n\t\twhile (tweenIds.length > 0) {\n\t\t\tthis._tweensAddedDuringUpdate = {};\n\n\t\t\tfor (let i = 0; i < tweenIds.length; i++) {\n\t\t\t\tconst tween = this._tweens[tweenIds[i]];\n\n\t\t\t\t// groups call the preserve with true because they like to delete themselves in a different way.\n\t\t\t\tif (tween && tween.update(deltaTime, true) == false && !preserve) {\n\t\t\t\t\tdelete this._tweens[tweenIds[i]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttweenIds = Object.keys(this._tweensAddedDuringUpdate);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","export type EasingFunction = (amount: number) => number;\n\n/**\n * The Ease class provides a collection of easing functions.\n *\n * These functions take in a parameter between 0 and 1 as the ratio and give out a new ratio.\n *\n * These are [Robert Penner](http://www.robertpenner.com/easing_terms_of_use.html)'s optimized formulas.\n *\n * Need help picking one? [Check this out!](https://easings.net/)\n */\nexport const Easing = {\n\tLinear: {\n\t\tNone(amount: number): number {\n\t\t\treturn amount;\n\t\t},\n\t},\n\tQuadratic: {\n\t\tIn(amount: number): number {\n\t\t\treturn amount * amount;\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn amount * (2 - amount);\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn 0.5 * amount * amount;\n\t\t\t}\n\n\t\t\treturn -0.5 * (--amount * (amount - 2) - 1);\n\t\t},\n\t},\n\tCubic: {\n\t\tIn(amount: number): number {\n\t\t\treturn amount * amount * amount;\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn --amount * amount * amount + 1;\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn 0.5 * amount * amount * amount;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((amount -= 2) * amount * amount + 2);\n\t\t},\n\t},\n\tQuartic: {\n\t\tIn(amount: number): number {\n\t\t\treturn amount * amount * amount * amount;\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn 1 - --amount * amount * amount * amount;\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn 0.5 * amount * amount * amount * amount;\n\t\t\t}\n\n\t\t\treturn -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n\t\t},\n\t},\n\tQuintic: {\n\t\tIn(amount: number): number {\n\t\t\treturn amount * amount * amount * amount * amount;\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn --amount * amount * amount * amount * amount + 1;\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn 0.5 * amount * amount * amount * amount * amount;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n\t\t},\n\t},\n\tSinusoidal: {\n\t\tIn(amount: number): number {\n\t\t\treturn 1 - Math.cos((amount * Math.PI) / 2);\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn Math.sin((amount * Math.PI) / 2);\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * amount));\n\t\t},\n\t},\n\tExponential: {\n\t\tIn(amount: number): number {\n\t\t\treturn amount == 0 ? 0 : Math.pow(1024, amount - 1);\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn amount == 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif (amount == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (amount == 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, amount - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n\t\t},\n\t},\n\tCircular: {\n\t\tIn(amount: number): number {\n\t\t\treturn 1 - Math.sqrt(1 - amount * amount);\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\treturn Math.sqrt(1 - --amount * amount);\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n\t\t},\n\t},\n\tElastic: {\n\t\tIn(amount: number): number {\n\t\t\tif (amount == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (amount == 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\tif (amount == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (amount == 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif (amount == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (amount == 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tamount *= 2;\n\n\t\t\tif (amount < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n\t\t},\n\t},\n\tBack: {\n\t\tIn(amount: number): number {\n\t\t\tconst s = 1.70158;\n\n\t\t\treturn amount * amount * ((s + 1) * amount - s);\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\tconst s = 1.70158;\n\n\t\t\treturn --amount * amount * ((s + 1) * amount + s) + 1;\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tconst s = 1.70158 * 1.525;\n\n\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\treturn 0.5 * (amount * amount * ((s + 1) * amount - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n\t\t},\n\t},\n\tBounce: {\n\t\tIn(amount: number): number {\n\t\t\treturn 1 - Easing.Bounce.Out(1 - amount);\n\t\t},\n\t\tOut(amount: number): number {\n\t\t\tif (amount < 1 / 2.75) {\n\t\t\t\treturn 7.5625 * amount * amount;\n\t\t\t} else if (amount < 2 / 2.75) {\n\t\t\t\treturn 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n\t\t\t} else if (amount < 2.5 / 2.75) {\n\t\t\t\treturn 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n\t\t\t}\n\n\t\t\treturn 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n\t\t},\n\t\tInOut(amount: number): number {\n\t\t\tif (amount < 0.5) {\n\t\t\t\treturn Easing.Bounce.In(amount * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n\t\t},\n\t},\n};\n","/**\n * Silly class to have a shared number that goes up.\n */\nexport class Sequence {\n\tprivate static _nextId = 0;\n\n\tpublic static nextId(): number {\n\t\treturn Sequence._nextId++;\n\t}\n}\n","import { Easing, EasingFunction } from \"./Easing\";\nimport { Interpolation, InterpolationFunction } from \"./Interpolation\";\nimport { Group } from \"./Group\";\nimport { Sequence } from \"./Sequence\";\n\n/**\n * A Tween is basically an animation command.\n * For example: _Go from here to there in this amount of time._\n *\n * Tweens won't start by themselves. **Remeber to call {@link Tween.start} when you want your tweens to start!**\n *\n * Most methods will return the same object to allow for daisy chaining.\n * @template Target of the tween\n */\nexport class Tween<Target> {\n\tprivate _isPaused = false;\n\tprivate _valuesStart: any = {};\n\tprivate _valuesEnd: any = {};\n\tprivate _valuesStartRepeat: any = {};\n\tprivate _duration = 0;\n\tprivate _initialRepeat = 0;\n\tprivate _repeat = 0;\n\tprivate _repeatDelayTime?: number;\n\tprivate _yoyo = false;\n\tprivate _isPlaying = false;\n\tprivate _reversed = false;\n\tprivate _delayTime = 0;\n\tprivate _startTime = 0;\n\tprivate _elapsedTime = 0;\n\tprivate _timescale = 1;\n\tprivate _easingFunction: EasingFunction = Easing.Linear.None;\n\tprivate _yoyoEasingFunction: EasingFunction = undefined;\n\tprivate _interpolationFunction: InterpolationFunction = Interpolation.Geom.Linear;\n\tprivate _chainedTweens: Array<Tween<any>> = [];\n\tprivate _onStartCallback?: (object: Target) => void;\n\tprivate _onStartCallbackFired = false;\n\tprivate _onUpdateCallback?: (object: Target, elapsed: number) => void;\n\tprivate _onRepeatCallback?: (object: Target) => void;\n\tprivate _onCompleteCallback?: (object: Target) => void;\n\tprivate _onStopCallback?: (object: Target) => void;\n\tprivate _id = Sequence.nextId();\n\tprivate _isChainStopped = false;\n\tprivate _object: Target;\n\tprivate _groupRef: Group;\n\tprivate get _group(): Group {\n\t\tif (this._groupRef) {\n\t\t\treturn this._groupRef;\n\t\t} else {\n\t\t\treturn Group.shared;\n\t\t}\n\t}\n\tprivate set _group(value: Group) {\n\t\tthis._groupRef = value;\n\t}\n\n\t/**\n\t * Creates an instance of tween.\n\t * @param object - The target object which properties you want to animate\n\t * @param group - The {@link Group} this new Tween will belong to. If none is provided it will default to the static {@link Group.shared}\n\t */\n\tconstructor(object: Target, group?: Group) {\n\t\tthis._object = object;\n\t\tthis._group = group;\n\t}\n\n\t/**\n\t * Gets the id for this tween. A tween id is a number that increases perpetually with each tween created. It is used inside {@link Group} to keep track of tweens\n\t * @returns returns the id for this tween.\n\t */\n\tpublic getId(): number {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Gets {@link Group} that this tween belongs to.\n\t * @returns returns the {@link Group} for this tween.\n\t */\n\tpublic getGroup(): Group {\n\t\treturn this._group;\n\t}\n\n\t/**\n\t * Gets the timescale for this tween. The timescale is a factor by which each deltatime is multiplied, allowing to speed up or slow down the tween.\n\t * @returns returns the timescale for this tween.\n\t */\n\tpublic getTimescale(): number {\n\t\treturn this._timescale;\n\t}\n\n\t/**\n\t * A tween is playing when it has been started but hasn't ended yet. This has nothing to do with pausing. For that see {@link Tween.isPaused}.\n\t * @returns returns true if this tween is playing.\n\t */\n\tpublic isPlaying(): boolean {\n\t\treturn this._isPlaying;\n\t}\n\n\t/**\n\t * A tween can only be paused if it was playing.\n\t * @returns returns true if this tween is paused.\n\t */\n\tpublic isPaused(): boolean {\n\t\treturn this._isPaused;\n\t}\n\n\t/**\n\t * Writes the starting values of the tween.\n\t *\n\t * **Starting values generated from {@link Tween.start} will be overwritten.**\n\t * @param properties - Starting values for this tween.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic from(properties: RecursivePartial<Target>): this;\n\tpublic from(properties: any): this;\n\tpublic from(properties: any): this {\n\t\ttry {\n\t\t\tJSON.stringify(properties);\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"The object you provided to the from() method has a circular reference!\");\n\t\t}\n\t\tthis._setupProperties(properties, this._valuesStart, properties, this._valuesStartRepeat, true);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the final values for the target object's properties by copy.\n\t * This will try to create a deep copy of the `properties` parameter.\n\t * If you want the tween to keep a reference to the final values use {@link Tween.dynamicTo}.\n\t *\n\t * If an array value is provided for a value that originally wasn't an array, it will be interpreted as an interpolable curve and the values inside the array will be interpolated using the function provided in {@link Tween.interpolation}\n\t *\n\t * If a string value that starts with either `+` or `-`is provided it will be taken as a _relative value_ to the start value.\n\t * @param properties - final values for the target object.\n\t * @param duration - if given it will be used as the duration in **miliseconds**. if not, a call to {@link Tween.duration} will be needed.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic to(properties: RecursivePartial<Target>, duration?: number): this;\n\tpublic to(properties: any, duration?: number): this;\n\tpublic to(properties: any, duration?: number): this {\n\t\ttry {\n\t\t\tthis._valuesEnd = JSON.parse(JSON.stringify(properties));\n\t\t} catch (e) {\n\t\t\t// recursive object. this gonna crash!\n\t\t\tconsole.warn(\"The object you provided to the to() method has a circular reference!. It can't be cloned. Falling back to dynamic targeting\");\n\t\t\treturn this.dynamicTo(properties, duration);\n\t\t}\n\n\t\tif (duration !== undefined) {\n\t\t\tthis._duration = duration;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the final values for the target object's properties by reference.\n\t * This will store a reference to the properties object allowing you to change the final values while the tween is running.\n\t * If you want the tween to make a copy of the final values use {@link Tween.to}.\n\t * @param properties - final values for the target object.\n\t * @param duration - if given it will be used as the duration in **miliseconds**. if not, a call to {@link Tween.duration} will be needed.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic dynamicTo(properties: RecursivePartial<Target>, duration?: number): this;\n\tpublic dynamicTo(properties: any, duration?: number): this;\n\tpublic dynamicTo(properties: any, duration?: number): this {\n\t\tthis._valuesEnd = properties; // JSON.parse(JSON.stringify(properties));\n\n\t\tif (duration !== undefined) {\n\t\t\tthis._duration = duration;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the duration for this tween in **miliseconds**.\n\t * @param d - The duration for this tween in **miliseconds**.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic duration(d: number): this {\n\t\tthis._duration = d;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Tweens won't start by themselves when created. Call this to start the tween.\n\t * Starting values for the animation will be stored at this moment.\n\t *\n\t * **This function can't overwrite the starting values set by {@link Tween.from}**\n\t *\n\t * You can call this method on a finished tween to restart it without changing the starting values.\n\t * To restart a tween and reset the starting values use {@link Tween.restart()}\n\t * @param delay - if given it will be used as the delay in **miliseconds**.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic start(delay?: number): this {\n\t\tif (this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (delay != undefined) {\n\t\t\tthis._delayTime = delay;\n\t\t}\n\n\t\tthis._group.add(this);\n\n\t\tthis._repeat = this._initialRepeat;\n\n\t\tif (this._reversed) {\n\t\t\t// If we were reversed (f.e. using the yoyo feature) then we need to\n\t\t\t// flip the tween direction back to forward.\n\n\t\t\tthis._reversed = false;\n\n\t\t\tthis._swapEndStartRepeatValues(this._valuesStartRepeat, this._valuesEnd);\n\t\t\tthis._valuesStart = JSON.parse(JSON.stringify(this._valuesStartRepeat));\n\t\t}\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._isPaused = false;\n\n\t\tthis._onStartCallbackFired = false;\n\n\t\tthis._isChainStopped = false;\n\n\t\tthis._startTime = -this._delayTime;\n\n\t\tthis._elapsedTime = 0;\n\n\t\tthis._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat, false);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @experimental\n\t * Forces a tween to restart.\n\t * Starting values for the animation will be stored at this moment.\n\t * This literally calls {@link Tween.reset} and then {@link Tween.start}.\n\t *\n\t * **Starting values will be cleared!. This function will erase all values created from {@link Tween.from} and/or {@link Tween.start}**\n\t * @param delay - if given it will be used as the delay in **miliseconds**.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic restart(delay?: number): this {\n\t\tthis.reset();\n\t\treturn this.start(delay);\n\t}\n\n\t/**\n\t * @experimental\n\t * Clears the starting and loop starting values.\n\t *\n\t * **Starting values will be cleared!. This function will erase all values created from {@link Tween.from} and/or {@link Tween.start}**\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic reset(): this {\n\t\tif (this._isPlaying) {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._valuesStart = {};\n\t\tthis._valuesStartRepeat = {};\n\t\treturn this;\n\t}\n\n\tprivate _setupProperties(_object: any, _valuesStart: any, _valuesEnd: any, _valuesStartRepeat: any, overwrite: boolean): void {\n\t\tfor (const property in _valuesEnd) {\n\t\t\tconst startValue = _object[property];\n\t\t\tconst startValueIsArray = Array.isArray(startValue);\n\t\t\tconst startValueIsNumber = !Number.isNaN(Number(startValue));\n\t\t\tconst propType = startValueIsArray ? \"array\" : typeof startValue;\n\t\t\tconst startValueIsObject = propType == \"object\";\n\t\t\tconst endValueIsObject = typeof _valuesEnd[property] == \"object\";\n\t\t\tconst isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (propType == \"undefined\" || propType == \"function\" || _valuesEnd[property] == undefined || (!startValueIsArray && !startValueIsNumber && !startValueIsObject)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (isInterpolationList) {\n\t\t\t\tlet endValues: Array<number | string> = _valuesEnd[property];\n\n\t\t\t\tif (endValues.length == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// handle an array of relative values\n\t\t\t\tendValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t_valuesEnd[property] = [startValue].concat(endValues);\n\t\t\t}\n\n\t\t\t// handle the deepness of the values\n\t\t\tif ((startValueIsObject || startValueIsArray || endValueIsObject) && startValue && !isInterpolationList) {\n\t\t\t\tif (typeof _valuesStart[property] == \"undefined\") {\n\t\t\t\t\t_valuesStart[property] = startValueIsArray ? [] : {};\n\t\t\t\t}\n\t\t\t\tif (typeof _valuesStartRepeat[property] == \"undefined\") {\n\t\t\t\t\t_valuesStartRepeat[property] = startValueIsArray ? [] : {};\n\t\t\t\t}\n\n\t\t\t\tthis._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property], overwrite);\n\t\t\t} else {\n\t\t\t\t// Save the starting value, but only once.\n\t\t\t\tif (typeof _valuesStart[property] == \"undefined\" || overwrite) {\n\t\t\t\t\t_valuesStart[property] = startValue;\n\t\t\t\t}\n\n\t\t\t\tif (typeof _valuesStartRepeat[property] == \"undefined\" || overwrite) {\n\t\t\t\t\tif (isInterpolationList) {\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stops this tween\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic stop(): this {\n\t\tif (!this._isChainStopped) {\n\t\t\tthis._isChainStopped = true;\n\t\t\tthis.stopChainedTweens();\n\t\t}\n\n\t\tif (!this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._group.remove(this);\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._isPaused = false;\n\n\t\tif (this._onStopCallback) {\n\t\t\tthis._onStopCallback(this._object);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fastforwards this tween to the end by triggering an update with an infinite value.\n\t * This will work even on paused tweens.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic end(): this {\n\t\tthis.resume();\n\t\tthis.update(Infinity);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pauses this tween. Does nothing is if the tween was already paused or wasn't playing.\n\t * Paused tweens ignore all update calls.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic pause(): this {\n\t\tif (this._isPaused || !this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._isPaused = true;\n\n\t\tthis._group.remove(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resumes this tween. Does nothing if the tween wasn't paused nor running.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic resume(): this {\n\t\tif (!this._isPaused || !this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._isPaused = false;\n\n\t\tthis._group.add(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stops tweens chained to this tween. To chain a tween see {@link Tween.chain}.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic stopChainedTweens(): this {\n\t\tfor (let i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\tthis._chainedTweens[i].stop();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the {@link Group} for this tween.\n\t * @param group - the group for this tween. If undefined or null is given, the group will default to {@link Group.shared}.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic group(group: Group): this {\n\t\tthis._group = group;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the delay for this tween.\n\t *\n\t * This will only be applied at the start of the tween. For delaying the repeating of a tween, see {@link Tween.repeatDelay}\n\t * @param amount - the delay for this tween.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic delay(amount: number): this {\n\t\tthis._delayTime = amount;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the timescale for this tween.\n\t * The deltaTime inside the update will be multiplied by this value allowing to speed up or slow down the flow of time.\n\t * @param multiplier - the timescale value for this tween.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic timescale(multiplier: number): this {\n\t\tthis._timescale = multiplier;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the number of times this tween will loop\n\t * @param times - the number of loops. For endless loops use `Infinity`\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic repeat(times: number = Infinity): this {\n\t\tthis._initialRepeat = times;\n\t\tthis._repeat = times;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the repeat delay for this tween.\n\t *\n\t * This will only be applied at the start of every repeat. For delaying only the start, see {@link Tween.delay}\n\t * @param amount - the repeat delay for this tween.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic repeatDelay(amount: number): this {\n\t\tthis._repeatDelayTime = amount;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets if this tween should yoyo (reflect) itself when repeating.\n\t * @param yoyo - the yoyo value for this tween.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic yoyo(yoyo: boolean = true): this {\n\t\tthis._yoyo = yoyo;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the easing function to interpolate the starting values with the final values.\n\t *\n\t * You can use the functions inside the {@link Easing} object.\n\t * @param easingFunction - a function that takes a number between 0 and 1 and returns another number between 0 and 1\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic easing(easingFunction: EasingFunction): this {\n\t\tthis._easingFunction = easingFunction;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @experimental\n\t * Sets the easing function to interpolate the starting values with the final values on the way back due to a yoyo tween.\n\t *\n\t * You can use the functions inside the {@link Easing} object.\n\t * @param easingFunction - a function that takes a number between 0 and 1 and returns another number between 0 and 1\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic yoyoEasing(easingFunction: EasingFunction): this {\n\t\tthis._yoyoEasingFunction = easingFunction;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the easing function to interpolate the starting values with the final values when the final value is an array of objects.\n\t * Use this to create bezier curves or interpolate colors.\n\t *\n\t * You can use the functions inside the {@link Interpolation} object.\n\t * @param interpolationFunction\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic interpolation(interpolationFunction: InterpolationFunction): this {\n\t\tthis._interpolationFunction = interpolationFunction;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds tweens to be called when this tween ends.\n\t * The tweens here will be called all at the same time.\n\t * @param tweens - tweens to be started when this tween ends\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic chain(...tweens: Array<Tween<any>>): this {\n\t\tthis._chainedTweens = tweens;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the onStart callback\n\t * @param callback - the function to call on start. It will recieve the target object as a parameter.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic onStart(callback: (object: Target) => void): this {\n\t\tthis._onStartCallback = callback;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the onStart callback\n\t * @param callback - the function to call on start. It will recieve the target object as a parameter and a number between 0 and 1 determining the progress of the tween.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic onUpdate(callback: (object: Target, elapsed: number) => void): this {\n\t\tthis._onUpdateCallback = callback;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the onRepeat callback\n\t * @param callback - the function to call on repeat. It will recieve the target object as a parameter.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic onRepeat(callback: (object: Target) => void): this {\n\t\tthis._onRepeatCallback = callback;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the onComplete callback\n\t * @param callback - the function to call on complete. It will recieve the target object as a parameter.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic onComplete(callback: (object: Target) => void): this {\n\t\tthis._onCompleteCallback = callback;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the onStop callback\n\t * @param callback - the function to call on stop. It will recieve the target object as a parameter.\n\t * @returns returns this tween for daisy chaining methods.\n\t */\n\tpublic onStop(callback: (object: Target) => void): this {\n\t\tthis._onStopCallback = callback;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Updates this tween\n\t * @param deltaTime - the amount of time that passed since last update in **miliseconds**\n\t * @param preserve - Prevent the removal of stopped, paused, finished or non started tweens from their group.\n\t * @returns returns true if the tween hasn't finished yet.\n\t */\n\tpublic update(deltaTime: number, preserve: boolean = false): boolean {\n\t\tconst retval = this._internalUpdate(deltaTime);\n\t\tif (!retval && !preserve) {\n\t\t\tthis._group.remove(this);\n\t\t}\n\t\treturn retval;\n\t}\n\n\tprivate _internalUpdate(deltaTime: number): boolean {\n\t\tif (this._isPaused) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdeltaTime *= this._timescale;\n\n\t\tlet elapsed;\n\n\t\tthis._elapsedTime += deltaTime;\n\n\t\tconst endTime = this._duration;\n\t\tconst currentTime = this._startTime + this._elapsedTime;\n\n\t\tif (currentTime > endTime && !this._isPlaying) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the tween was already finished,\n\t\tif (!this.isPlaying) {\n\t\t\tthis.start();\n\t\t}\n\n\t\tif (this._onStartCallbackFired == false) {\n\t\t\tif (this._onStartCallback) {\n\t\t\t\tthis._onStartCallback(this._object);\n\t\t\t}\n\n\t\t\tthis._onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = currentTime / this._duration;\n\t\t// zero duration = instacomplete.\n\t\telapsed = this._duration == 0 ? 1 : elapsed;\n\t\t// otherwise, clamp the result\n\t\telapsed = Math.min(1, elapsed);\n\t\telapsed = Math.max(0, elapsed);\n\n\t\tlet leftOverTime = currentTime % this._duration; // leftover time\n\t\tif (Number.isNaN(leftOverTime)) {\n\t\t\tleftOverTime = 0;\n\t\t}\n\t\tconst loopsMade = Math.round(currentTime / this._duration); // if we overloop, how many loops did we eat?\n\n\t\t// check which easing to use...\n\t\tlet value: number;\n\t\tif (this._reversed && this._yoyoEasingFunction) {\n\t\t\tvalue = this._yoyoEasingFunction(elapsed);\n\t\t} else {\n\t\t\tvalue = this._easingFunction(elapsed);\n\t\t}\n\n\t\t// properties transformations\n\t\tthis._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n\n\t\t// if there is absolutely no chance to loop, call update. we will be done.\n\t\tif (this._onUpdateCallback && (elapsed != 1 || this._repeat <= 0)) {\n\t\t\tthis._onUpdateCallback(this._object, elapsed);\n\t\t}\n\n\t\tif (elapsed == 1) {\n\t\t\tif (this._repeat > 0) {\n\t\t\t\t// substract loops\n\t\t\t\tif (isFinite(this._repeat)) {\n\t\t\t\t\tthis._repeat -= loopsMade;\n\t\t\t\t}\n\n\t\t\t\tif (this._onUpdateCallback && (this._repeat < 0 || leftOverTime <= 0)) {\n\t\t\t\t\tthis._onUpdateCallback(this._object, elapsed);\n\t\t\t\t}\n\n\t\t\t\t// fix starting values for yoyo or relative\n\t\t\t\tif (this._yoyo) {\n\t\t\t\t\tthis._swapEndStartRepeatValues(this._valuesStartRepeat, this._valuesEnd);\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveForwardStartRepeatValues(this._valuesStartRepeat, this._valuesEnd);\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values\n\t\t\t\tthis._valuesStart = JSON.parse(JSON.stringify(this._valuesStartRepeat));\n\n\t\t\t\t// store yoyo state\n\t\t\t\tif (this._yoyo) {\n\t\t\t\t\tthis._reversed = !this._reversed;\n\t\t\t\t}\n\n\t\t\t\t// restart start time\n\t\t\t\tif (this._repeatDelayTime !== undefined) {\n\t\t\t\t\tthis._startTime = -this._repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\tthis._startTime = 0;\n\t\t\t\t}\n\n\t\t\t\tif (this._onRepeatCallback) {\n\t\t\t\t\tthis._onRepeatCallback(this._object);\n\t\t\t\t}\n\n\t\t\t\tthis._elapsedTime = 0; // reset the elapsed time\n\n\t\t\t\t// if we have more loops to go, then go\n\t\t\t\tif (this._repeat >= 0) {\n\t\t\t\t\t// update with the leftover time\n\t\t\t\t\tif (leftOverTime > 0) {\n\t\t\t\t\t\t// only if it is greater than 0 and do not emit onupdate events...\n\t\t\t\t\t\tthis._internalUpdate(leftOverTime);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._onCompleteCallback) {\n\t\t\t\tthis._onCompleteCallback(this._object);\n\t\t\t}\n\n\t\t\tfor (let i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\tthis._chainedTweens[i].start(this._startTime + this._duration);\n\t\t\t}\n\n\t\t\tthis._isPlaying = false;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _updateProperties(_object: any, _valuesStart: any, _valuesEnd: any, value: number): void {\n\t\tfor (const property in _valuesEnd) {\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (_valuesStart[property] == undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst start = _valuesStart[property];\n\t\t\tlet end = _valuesEnd[property];\n\t\t\tconst startIsArray = Array.isArray(_object[property]);\n\t\t\tconst endIsArray = Array.isArray(end);\n\t\t\tconst isInterpolationList = !startIsArray && endIsArray;\n\n\t\t\tif (isInterpolationList) {\n\t\t\t\t_object[property] = this._interpolationFunction(end as Array<number>, value);\n\t\t\t} else if (typeof end == \"object\" && end) {\n\t\t\t\tthis._updateProperties(_object[property], start, end, value);\n\t\t\t} else {\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tend = this._handleRelativeValue(start, end as number | string);\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof end == \"number\" && (typeof start == \"number\" || typeof start == \"string\")) {\n\t\t\t\t\t// I am certain that start here won't anser NaN or it would have been filtrated on the setupProperties\n\t\t\t\t\t_object[property] = Number(start) + (end - Number(start)) * value;\n\n\t\t\t\t\t// if it was originally a string, we make it back to string. keep it tidy\n\t\t\t\t\tif (typeof start == \"string\") {\n\t\t\t\t\t\t_object[property] = String(_object[property]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _handleRelativeValue(start: number, end: number | string): number {\n\t\tif (typeof end !== \"string\") {\n\t\t\treturn end;\n\t\t}\n\n\t\tif (end.charAt(0) == \"+\" || end.charAt(0) == \"-\") {\n\t\t\treturn start + Number(end);\n\t\t}\n\n\t\treturn Number(end);\n\t}\n\n\tprivate _swapEndStartRepeatValues(_valuesStartRepeat: any, _valuesEnd: any): void {\n\t\tfor (const property in _valuesStartRepeat) {\n\t\t\tif (typeof _valuesStartRepeat[property] == \"object\") {\n\t\t\t\tthis._swapEndStartRepeatValues(_valuesStartRepeat[property], _valuesEnd[property]);\n\t\t\t} else {\n\t\t\t\tconst tmp = _valuesStartRepeat[property];\n\t\t\t\tif (typeof _valuesEnd[property] == \"string\") {\n\t\t\t\t\t_valuesStartRepeat[property] = Number(_valuesStartRepeat[property]) + Number(_valuesEnd[property]);\n\t\t\t\t} else {\n\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property];\n\t\t\t\t}\n\n\t\t\t\t_valuesEnd[property] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _moveForwardStartRepeatValues(_valuesStartRepeat: any, _valuesEnd: any): void {\n\t\tfor (const property in _valuesStartRepeat) {\n\t\t\tif (typeof _valuesEnd[property] == \"object\") {\n\t\t\t\tthis._moveForwardStartRepeatValues(_valuesStartRepeat[property], _valuesEnd[property]);\n\t\t\t} else {\n\t\t\t\tif (typeof _valuesEnd[property] == \"string\") {\n\t\t\t\t\t_valuesStartRepeat[property] = Number(_valuesStartRepeat[property]) + Number(_valuesEnd[property]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A recursive version of Typescript's Partial<> decorator.\n */\ntype RecursivePartial<T> = {\n\t[P in keyof T]?: T[P] extends (infer U)[] ? RecursivePartial<U>[] : RecursivePartial<T[P]>;\n};\nexport default Tween;\n","/**\n * Constant with the hardcoded version of the app\n */\nexport const VERSION = \"0.0.6\";\n"],"names":["NOW","self","process","hrtime","time","undefined","performance","now","bind","Date","getTime","a","Group","this","getAll","Object","keys","_tweens","map","tweenId","_this","removeAll","add","tween","getId","_tweensAddedDuringUpdate","remove","update","deltaTime","preserve","tweenIds","_lastUpdateTime","length","i","_shared","Easing","Linear","None","amount","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Math","cos","PI","sin","Exponential","pow","Circular","sqrt","Elastic","Back","s","Bounce","Interpolation","Geom","v","k","m","f","floor","fn","Utils","Bezier","b","n","pw","bn","Bernstein","QuadraticBezier","t","i0","i1","i2","CubicBezier","i3","CatmullRom","Angle","Radians","WrapLinear","Degrees","Color","RGB","RGBLinear","HSV","HSVLinear","HCL","HCLLinear","RGBsplit","color","r","g","HSVsplit","rgb","h","max","min","d","HSVJoin","p","q","HCLSplit","c","l","H","U","V","Q","HCLgamma","atan2","exp","HCLJoin","T","C","L","A","tan","value1","value2","maxValue","retval","trunc","abs","color1","color2","argb1","argb2","ahsv1","ahsv2","ahcl1","ahcl2","p0","p1","fc","Factorial","p2","p3","v0","v1","t2","Sequence","nextId","_nextId","Tween","object","group","_object","_group","_id","getGroup","getTimescale","_timescale","isPlaying","_isPlaying","isPaused","_isPaused","from","properties","JSON","stringify","e","Error","_setupProperties","_valuesStart","_valuesStartRepeat","to","duration","_valuesEnd","parse","console","warn","dynamicTo","_duration","start","delay","_delayTime","_repeat","_initialRepeat","_reversed","_swapEndStartRepeatValues","_onStartCallbackFired","_isChainStopped","_startTime","_elapsedTime","restart","reset","stop","overwrite","property","startValue","startValueIsArray","Array","isArray","startValueIsNumber","Number","isNaN","propType","startValueIsObject","endValueIsObject","isInterpolationList","endValues","_handleRelativeValue","concat","slice","reverse","stopChainedTweens","_onStopCallback","end","resume","Infinity","pause","numChainedTweens","_chainedTweens","timescale","multiplier","repeat","times","repeatDelay","_repeatDelayTime","yoyo","_yoyo","easing","easingFunction","_easingFunction","yoyoEasing","_yoyoEasingFunction","interpolation","interpolationFunction","_interpolationFunction","chain","onStart","callback","_onStartCallback","onUpdate","_onUpdateCallback","onRepeat","_onRepeatCallback","onComplete","_onCompleteCallback","onStop","_internalUpdate","elapsed","currentTime","leftOverTime","value","loopsMade","round","_updateProperties","isFinite","_moveForwardStartRepeatValues","startIsArray","endIsArray","String","charAt","tmp","_groupRef","shared"],"mappings":"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"}